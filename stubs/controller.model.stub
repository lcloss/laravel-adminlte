<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use App\Http\Requests\Store{{ model }}Request;
use App\Http\Requests\Update{{ model }}Request;
use App\Http\Requests\MassDestroy{{ model }}Request;
use Illuminate\Http\Request;
use Illuminate\Contracts\View\View;
use Illuminate\Http\RedirectResponse;
use Illuminate\Support\Facades\Gate;
use Symfony\Component\HttpFoundation\Response;

class {{ class }} extends Controller
{
   public function index(): View
   {
       abort_if(Gate::denies('{{ modelVariable }}_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       ${{ modelVariable }}s = {{ model }}::all();

       return view('{{ modelVariable }}s.index', compact('{{ modelVariable }}s'));
   }

   public function create(): View
   {
       abort_if(Gate::denies('{{ modelVariable }}_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       return view('{{ modelVariable }}s.edit');
   }

   public function store(Store{{ model }}Request $request): RedirectResponse
   {
       abort_if(Gate::denies('{{ modelVariable }}_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       {{ model }}::create($request->validated());

       return redirect()->route('{{ modelVariable }}s.index');
   }

   public function show({{ model }} ${{ modelVariable }}): View
   {
       abort_if(Gate::denies('{{ modelVariable }}_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       return view('{{ modelVariable }}s.show', compact('{{ modelVariable }}'));
   }

   public function edit({{ model }} ${{ modelVariable }}): View
   {
       abort_if(Gate::denies('{{ modelVariable }}_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       return view('{{ modelVariable }}s.edit', compact('{{ modelVariable }}'));
   }

   public function update(Update{{ model }}Request $request, {{ model }} ${{ modelVariable }}): RedirectResponse
   {
       abort_if(Gate::denies('{{ modelVariable }}_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       ${{ modelVariable }}->update($request->validated());

       return redirect()->route('{{ modelVariable }}s.index');
   }

   public function destroy({{ model }} ${{ modelVariable }}): RedirectResponse
   {
       abort_if(Gate::denies('{{ modelVariable }}_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');

       ${{ modelVariable }}->delete();

       return redirect()->route('{{ modelVariable }}s.index');
   }

    public function massDestroy(MassDestroy{{ model }}Request $request)
    {
        {{ model }}::whereIn('id', request('ids'))->delete();

        return response(null, Response::HTTP_NO_CONTENT);
    }
}
